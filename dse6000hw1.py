# -*- coding: utf-8 -*-
"""DSE6000HW1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nobiNCUMG9Rqh70R9Szx9UY1SRIO7rp_
"""

import pandas as pd
# %matplotlib inline
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as npq

"""# Crime data set
## - Jatin Gongiwala
## Intorduction
## We have the criminal dataset of detroit which has different numerical as well as categorical variables such as offense category, time , place, etc.
Lets go ahead with EDA

Getting the file directory
"""

pwd

crime=pd.read_csv("https://storage.googleapis.com/wsujatinmg/crime.csv")

"""# Viewing the data"""

crime.head()

"""# use the following command to view the data types"""

print(crime.info())

"""# DATA CLEANING 

# change the column names to lower case for easier access
"""

crime.columns = [x.lower() for x in crime.columns]

crime.head()

"""# Replace spaces with '_'"""

crime.columns = crime.columns.str.replace(' ', '_')

crime.head()

"""# Lets see how many types of offense description are mentioned in the data"""

print(len(crime['offense_description'].unique()))

crime_types=crime.groupby(['offense_description'], as_index=True)


print(crime_types.size())

"""# As we can see, there are specific offense categories with a considerable high frequency


AGGRAVATED / FELONIOUS ASSAULT  -  16428

ASSAULT AND BATTERY/SIMPLE ASSAULT 24215

BURGLARY - FORCED ENTRY            12540

# ---
# Lets get the summary statistics for all the numerical variables
"""

crime.describe()

"""# Lets find out the frequency of crimes according to the hours in a day

# We plot a histogram to find out
"""

plt.hist(crime.hour_of_day)
plt.title('Crime rate')
plt.ylabel("Frequency of crimes")
plt.xlabel("Hours")
plt.show()

"""# We can observe that crime rate increases during late night (10pm - 2am)
# It is the lowest at 5 am

#                                                                                       ---
# Lets create 'categ' and store the offense_category data in it
"""

categ = crime.groupby('offense_category').size()

categ

"""# After looking at the statistics, we can plot a graph for the most commited crimes"""

plt.barh(categ.index.tolist(), categ.tolist())
plt.title('types of crimes')
plt.xlabel("Frequency of crimes")
plt.show()

"""# We can observe some of the crimes are considerably high than the rest.
# A lot of the categories have lower frequency, we can exclude those
"""

categ1 = categ.drop(['RUNAWAY','AGGRAVATED ASSAULT','FRAUD','WEAPONS OFFENSES','DANGEROUS DRUGS', 'SOLICITATION','MISCELLANEOUS','FAMILY OFFENSE','OUIL','ROBBERY','HOMICIDE','FORGERY','KIDNAPPING','ARSON','DAMAGE TO PROPERTY','DISORDERLY CONDUCT','EXTORTION','SEX OFFENSES','GAMBLING','JUSTIFIABLE HOMICIDE','SEXUAL ASSAULT','LIQUOR','OBSTRUCTING THE POLICE','OTHER','OBSTRUCTING JUDICIARY','STOLEN PROPERTY'])
categ1

plt.bar(categ1.index.tolist(), categ1.tolist())
plt.title('types of crimes')
plt.ylabel("frequency of crimes")
plt.xlabel("Neighborhoods")
plt.show()

"""# As we can see, Larceny is the most commited crime, closely followed by assault.
# We can see a clear difference between the top two and remaining categories.

# ---
# lets find out which district has the most number of crime incidents
"""

dist = crime.groupby('council_district').size()

dist

plt.bar(dist.index.tolist(), dist.tolist())
plt.title('crime rate according to districts')
plt.ylabel("frequency of crimes")
plt.xlabel("Districts")
plt.show()

"""# From the graph we can see that the district with code 7 has the highest crime rate and the district 6 has the lowest crime rates

# ---
# Crimes according to specific neighborhood
"""

neigh = crime.groupby('neighborhood').size()

neigh

df=crime[['offense_category', 'neighborhood']].copy()
df.head()

"""## lets study more about the neighborhood 'Warrendale' and the crimes commited"""

dfm=df[df['neighborhood']=='Warrendale']

dfm.head()

dfm.groupby('offense_category').size()

"""# For the neighborhood 'Warrendale' the most number of crime commited is Assault followed by damage to property and larceny"""

df2=df[df['offense_category']=='HOMICIDE']
df2
df2.groupby('neighborhood').size()

"""# Warrendale aslo has the most number of homicides followed by Claytown"""

dfj=crime[['offense_category','neighborhood','hour_of_day']]
dfz=dfj[dfj['neighborhood']=='Warrendale']
dfz.groupby('offense_category').size()

ax = sns.barplot( x="hour_of_day",y="offense_category",
             ci=None,
            data=dfz)
ax.set(xlabel='Hours in a day', ylabel='Offense type')
plt.show()

"""# Above graphs shows the data for Warrendale and crimes commited according to the time.
# we can observe that the crime 'Liquor' is commited late night while the crimes 'Arson' and 'Family offense' are commited at day time i.e 8am - 10am
"""

crime["hour_of_day"].plot.box();
plt.title('Box plot for Hours')

"""# boxplot shows us the quartiles. The inter quartile range for hour_of_day is from 6 - 17 

# Conclusion
Through the EDA on the dataset, we found out more about the time at which there's more number of crimes (late night).
We got to learn more about the neighborhoods - Warrendale has the most number of crimes out of all.
Followed my Claytown.
Larceny is among the most commited crimes.
Only a few of the crime categories capture the major portion of crimes in Detroit.
Warrendale has the most number of Homicide cases
Different types of crimes are commited at different time
for instance - Alcohol crime is mostly commited late night

---
# Lets take another data set dealing with citizen complaints
"""

complaints=pd.read_csv("https://storage.googleapis.com/wsujatinmg/Complaints.csv")

complaints.head()

"""# Data Cleaning
## removing column with a lot of missing values as it is not required for EDA
"""

compl= complaints.drop(columns="Administrative Closure")

compl.head()

"""## removing the rows with missing values in it using the following commands"""

compl=compl.dropna()
compl.head()

"""## Removing the spaces and changing all the column names to lower case"""

compl.columns = compl.columns.str.replace(' ', '_')
compl.head()

compl.columns = [x.lower() for x in compl.columns]
compl.head()

sns.barplot(x="ctznsex", y="age",ci=None,
            data=compl),plt.xlabel("Sex"),plt.ylabel("Age"),plt.title("Complaints according to sex")

"""Here, we observe older female records than males"""

fig = sns.barplot( x="Age",y="ctznRace",
            hue="ctznSex",ci=None,
            data=complaints)
fig.set(xlabel='AGE', ylabel='RACE')
plt.show()

"""## Here, we can clearly observe older Male asians than the females.
## for most of the races, the Females are older than males except for 'White' and 'Asians'
## For races Pakistani, Chaldean and Native american no Female complaint has been observed
"""

allegation=compl.groupby(['allegation'], as_index=True)

allegation.size()

"""## We can observe the most number of Allegations type are 'Procedure' followerd my 'Demeanor'"""

race=compl.groupby(['ctznrace'], as_index=True)
race.size()

"""##  We observe most number of complaints by 'Black' race and the least number of complaints by 'Chaldean'.
480 individuals chose not reveal their race (Unknown)
"""

d = compl[
        (compl.ctznrace=='Black')
        & (compl.ctznsex == 'Male')
        ].shape[0]
d

d = compl[
        (compl.ctznrace=='White')
        & (compl.ctznsex == 'Male')
        ].shape[0]
d

"""# More number of Black males than White males who registered the complaints."""

compl['age'].plot.box();
plt.title('Age Box plot')

"""## We observe some set of outliers at the higher end of Age.
The quantile range is around 25 - 50
"""

plt.hist(compl.age)
plt.title('complaints')
plt.ylabel("Frequency")
plt.xlabel("Age")
plt.show()

"""## The histogram is Unimodal
## We observe that the peak is around 25 and then goes on decreasing as the age increases. 
## We do observe some innacuracies, for example the age cannot be zero
"""

c = compl.groupby('entry').size()
plt.barh(c.index.tolist(), c.tolist())
plt.title('types of Entries')
plt.xlabel("Number of Entires")
plt.show()

"""## We can observe that most of complaints are on the Telephone followed by Walk ins"""

groups=compl.groupby(['ctznrace'], as_index=True)
groups_sum = groups.sum();

n=5
groups_df = data=groups_sum.nlargest(n,'age')
print(groups_df)

groups_names = groups_df.index.values
race1 = compl[compl['ctznrace'].isin(groups_names)]

j = sns.factorplot(x="ctznrace", y="age",
                    col='ctznsex',
                    ci=None,
                    
                    data=compl[compl['ctznrace'].isin(groups_names)], kind="bar",
                    size=4, aspect=.9);
j.set(xlabel='RACE', ylabel='AGE')
plt.show()

"""Here , we get a clear view of the age group according to the gender and race

Differences can be observed in the different races and their gender

Example - Older Hispanic Females  than the males

## Conclusion

Most number of complaints are registered by 'Black' race

Least number of complaints by 'chaldean'

General trend of older females than males

Most of the complaints registered through Telephone and Walk ins

The rest of the categories have a negligible share compared to them

Most number of complaints registered are in the range 25-55(Age)

Thankyou
"""

